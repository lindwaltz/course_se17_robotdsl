/*
 * generated by Xtext 2.11.0
 */
package se.chalmers.turtlebotmission.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import se.chalmers.turtlebotmission.services.MissionDslGrammarAccess
import se.chalmers.turtlebotmission.turtlebotmission.Mission
import se.chalmers.turtlebotmission.turtlebotmission.Task
import se.chalmers.turtlebotmission.turtlebotmission.TurtleBot
import se.chalmers.turtlebotmission.turtlebotmission.WayPoint
import se.chalmers.turtlebotmission.turtlebotmission.WaypointType

class MissionDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MissionDslGrammarAccess

	def dispatch void format(TurtleBot turtleBot, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		turtleBot.getArea.format;
		for (WaypointType waypointType : turtleBot.getWaypointtypes()) {
			waypointType.format;
		}
		for (WayPoint wayPoint : turtleBot.getWaypoints()) {
			wayPoint.format;
		}
		for (Mission mission : turtleBot.getMissions()) {
			mission.format;
		}
	}

	def dispatch void format(Mission mission, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Task task : mission.getTask()) {
			task.format;
		}
	}
	
	// TODO: implement for 
}
